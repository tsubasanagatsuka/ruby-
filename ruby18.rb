# 問題.1
# 配列にある値の中から偶数の数をカウントして出力するメソッドを作りましょう。

# 出力例：
# count_evens([2, 1, 2, 3, 4]) → 3
# count_evens([2, 2, 0]) → 3
# count_evens([1, 3, 5]) → 0

# ヒント
# even?というメソッドを使いましょう。

# even?メソッド
# Rubyが元々用意している、対象の数値が偶数かどうかを判断するメソッドです。
# 対象の要素の値が偶数であれば真を返し、そうでない場合は偽を返します。

# even?メソッドの詳細は公式リファレンスを確認しましょう。

# 10.even?
# #=> true

# 5.even?
# #=> false

def count_evens(nums)
  count = 0
  nums.each do |num|
    if num.even? #数が偶数かどうか判断
      count += 1 #+1にすることによって0から始めるのではなく1から数えるようにする(問題文に合わせるため)
    end
  end
  puts count
end

count_evens([2, 1, 2, 3, 4])

偶数の数を入れておく変数countを用意
eachメソッドで配列の中を1つずつ取り出してeven?メソッドで偶数か判定
偶数だったらcountに1を足す
これを繰り返して最後にcountを出力する

even?メソッドは偶数かどうかを判断するメソッド
なので変数を決めることによってその中の数字を奇数、偶数で分けることができる
