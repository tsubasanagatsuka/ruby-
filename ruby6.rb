# 問題.1
# 次の要件を満たすプログラムを実装しましょう。

# 1~10の数値を順番に足し合わせる
# 足し算の合計値がターミナルに出力される
# しかし、以下のような順番に並べて、足し算しただけのプログラムはNGです。

# 1
# sum = 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10
# ループ処理を用いて実装しましょう。

# ヒント
# times文を用いることで、ループ処理を実装できます。
# ループ処理とは、特定の条件下にて、任意の処理を繰り返すことでした。
# 今回の問題にループ処理を当てはめると、

# 0に1を足し、
# その結果に2を足し、
# その結果に3を足し、
# その結果に4を足し、
# その結果に5を足し、
# ...と10まで繰り返していきます。


# 10.times do |i|
#   puts i + 1
# end

# 変数iを定義した上で　iは0から始まるのでdo~endの中での処理なので+1されたものはそのままの数値で繰り返し処理を行う
sum = 0

10.times do |i|
  sum += i + 1
end
# sum += 1
# sum += 2
# sum += 3
# sum += 4
# sum += 5
# sum += 6
# sum += 7
# sum += 8
# sum += 9
# sum += 10
puts sum

# do~endの外でsum=0を定義してあげる
# teimesメソッドの中に+=の演算子を追加することで加算が生まれる
# 何に加算すればいいのかというと、外で定義してあげたsum
# そこに変数iを入れる
# i+1をsumに加算していく
# なのでsum += i + 1という式になる
# 繰り返すたびにsum = 0に1が＋されていくので
# ループしていくたびに数値が増えていく

模範解答
1
2
3
4
5
6
7
sum = 0

10.times do |i|
  sum = sum + i + 1
end

puts sum
もしくは自己代入演算子+=を使って

1
2
3
4
5
6
7
sum = 0

10.times do |i|
  sum += i + 1
end

puts sum
解説
今回作成するのは、1〜10までの数字を順番に足し合わせていくプログラムです。



このプログラムの考え方は以下になります。

①合計値を保存しておく変数sumを用意する
②変数sumに1〜10の数値を順番に足していく
③順番に足していく処理をtimes文の繰り返しで置き換える
④変数sumの値をターミナルに出力

①合計値を保存しておく変数sumを用意する
1に2を足し、
その結果に3を足し、
その結果に4を足し、
その結果に5を足し、...と10まで繰り返していきます。

よって常に結果を保存しておく変数が必要になります。これを変数名sumとして定義しておきます。まだ何も足してない状態なので、sumには0を代入しておきます。

1
sum = 0
②変数sumに1〜10の数値を順番に足していく
変数sumに1〜10の数値を順番に足していくプログラムをそのまま書いてみましょう。

 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
sum = 0

sum = sum + 1
sum = sum + 2
sum = sum + 3
sum = sum + 4
sum = sum + 5
sum = sum + 6
sum = sum + 7
sum = sum + 8
sum = sum + 9
sum = sum + 10
自己代入演算子+=を使うことでより短い記述にできます。

 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
sum = 0

sum += 1
sum += 2
sum += 3
sum += 4
sum += 5
sum += 6
sum += 7
sum += 8
sum += 9
sum += 10
このコードは非常に長く、かつ同じ処理が続いてるため、times文を使って効率的なコードに書き換えます。

③順番に足していく処理をtimes文の繰り返しで置き換える
times文を使えば、何度も繰り返される同じ処理をまとめることができます。今回まとめられるのはsum += 数値の部分です。

times文は繰り返したい回数.timesと記載して繰り返す数を決めます。今回は1〜10まで順番に足していくため、10回同じような処理が繰り返されます。よって繰り返したい回数は10回です。

1
2
3
4
5
sum = 0

10.times do |i|
  # 順番に足していく処理を書く
end
times文の中に繰り返したい処理を書きます。今回はsum += 数値を繰り返します。

1
2
3
4
5
sum = 0

10.times do |i|
  sum += 数値
end
数値の部分はどうすればいいでしょうか。繰り返す回数ごとにこの数値は変わります。1回目は1、2回目は2、3回目は3となります。つまり、繰り返しの回数と同じです。
times文では、変数iの中に繰り返しの回数が数値として自動で代入されます。よって、変数iを使えば繰り返しの回数を変数sumに足していくことができます。
ただし、プログラムなので1回目のiの数値は0となります。よってsumに足すのは1増やしたi + 1にしましょう。

1
2
3
4
5
sum = 0

10.times do |i|
  sum += i + 1
end
④変数sumの値をターミナルに出力
最後にputsメソッドでsumをターミナルに出力すれば終了です。

1
2
3
4
5
6
7
sum = 0

10.times do |i|
  sum += i + 1
end

puts sum
